#
# WARNING: Make sure to use the docker-compose.yml of the current release:
#
# https://github.com/immich-app/immich/releases/latest/download/docker-compose.yml
#
# The compose file on main may not be compatible with the latest release.
#

volumes:
    immich-postgres-data:
    immich-model-cache:


services:
    immich-server:
        image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
        extends:
            file: immich/hwaccel.transcoding.yml
            service: nvenc # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
        volumes:
            # Do not edit the next line. If you want to change the media storage location on your system, edit the value of UPLOAD_LOCATION in the immich/immich.env file
            - ${UPLOAD_LOCATION}:/usr/src/app/upload
            - ${EXTERNAL_LOCATION_1}:/usr/src/app/external/F/Pictures:ro
            - ${EXTERNAL_LOCATION_2}:/usr/src/app/external/F/Videos:ro
            - ${EXTERNAL_LOCATION_3}:/usr/src/app/external/F/H_Dataset:ro
            - /etc/localtime:/etc/localtime:ro
        env_file:
            - immich/immich.env
        ports:
            - '2283:2283'
        depends_on:
            - immich-redis
            - immich-postgres
        restart: always
        healthcheck:
            disable: false
        networks:
            - frontend
            - backend

    immich-machine-learning:
        # For hardware acceleration, add one of -[armnn, cuda, openvino] to the image tag.
        # Example tag: ${IMMICH_VERSION:-release}-cuda
        image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}-cuda
        extends:
            # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
            file: immich/hwaccel.ml.yml
            service: cuda # set to one of [armnn, cuda, openvino, openvino-wsl] for accelerated inference - use the `-wsl` version for WSL2 where applicable
        volumes:
            - immich-model-cache:/cache
        env_file:
            - immich/immich.env
        restart: always
        healthcheck:
            disable: false
        networks:
            - backend

    immich-redis:
        image: docker.io/redis:6.2-alpine@sha256:eaba718fecd1196d88533de7ba49bf903ad33664a92debb24660a922ecd9cac8
        healthcheck:
            test: redis-cli ping || exit 1
        restart: always
        networks:
            - backend

    immich-postgres:
        container_name: immich-db
        image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
        environment:
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_DB: ${DB_DATABASE_NAME}
            POSTGRES_INITDB_ARGS: '--data-checksums'
        volumes:
            # Do not edit the next line. If you want to change the database storage location on your system, edit the value of DB_DATA_LOCATION in the .env file
            - immich-postgres-data:/var/lib/postgresql/data
        healthcheck:
            test: >-
                pg_isready --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" || exit 1; Chksum="$$(psql --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
            interval: 5m
            start_interval: 30s
            start_period: 5m
        command: >-
            postgres -c shared_preload_libraries=vectors.so -c 'search_path="$$user", public, vectors' -c logging_collector=on -c max_wal_size=2GB -c shared_buffers=512MB -c wal_compression=on
        restart: always
        networks:
            - backend
